<project name="QwStoretWqxEtl" default="batch" basedir=".">
	<property name="work.dir" value="/pdc/wqp_data" />

    <!-- batch and it's depends are the normal automated full ETL. -->

    <target name="batch" depends="scpScript, dos2unix, extractData, importData, grantAndAnalyzeWqxTables, dependencies, batchTransformAndLoadData, finishETL"/>

    <target name="scpScript">
        <echo>Copy the script to ${storet_host}</echo>
        <scp todir="storet_user:${storet_user_password}@${storet_host}:${work.dir}" trust="true">
            <fileset dir=".">
                <include name="wqx_dump.sh" />
                <include name="wqx_finish.sh" />
            </fileset>
        </scp>
    </target>

    <target name="dos2unix">
        <echo>Fix cr/lf in script at ${storet_host}</echo>
        <sshexec host="${storet_host}"
            trust="true"
            username="storet_user"
            password="${storet_user_password}"
            command="dos2unix ${work.dir}/wqx_dump.sh ${work.dir}/wqx_finish.sh"
            verbose="${verbose}"
        />
    </target>

    <target name="extractData">
        <echo>Run the script at ${storet_host}</echo>
        <sshexec host="${storet_host}"
            trust="true"
            failonerror="true"
            username="storet_user"
            password="${storet_user_password}"
            command="bash -e -x ${work.dir}/wqx_dump.sh ${dbFolder}"
            outputproperty="pullResult"
        />
    </target>

    <target name="setStopRun">
        <echo>Check if we had changes and should continue</echo>
        <condition property="stopRun">
            <contains string="${pullResult}" substring="No new export to process." />
        </condition>
    </target>

    <target name="importData" depends="setStopRun" unless="stopRun">
        <echo>Using impdp to load the wqp schema in ${instance}</echo>
        <exec executable="/usr/oracle/app/oracle/product/11.2.0/client_1/bin/impdp" failonerror="true">
            <arg value="userid=wqx/${wqx_password}@${instance}"/>
            <arg value="parfile=impdpWqx.par"/>
        </exec>
    </target>

    <target name="grantAndAnalyzeWqxTables" depends="setStopRun" unless="stopRun">
        <echo>Grant select on the imported tables in ${instance}</echo>
        <exec executable="sqlplus" failonerror="true">
            <arg value="wqx/${wqx_password}@${instance}"/>
            <arg value="@${basedir}/wqx_grants_and_analyze.sql"/>
        </exec>
    </target>


    <!-- The rest of these are if you want to run the ETL step-by-step manually. --> 

    <target name="dependencies">
        <get src="${app_jar_url}" dest="app.jar" usetimestamp="true" />
    </target>

    <target name="batchTransformAndLoadData">
        <java jar="app.jar" fork="true" failonerror="true">
            <arg value="datasource=STORET"/>
            <sysproperty key="app.datasource.wqp.url" value="${wqpUrl}"/>
            <sysproperty key="app.datasource.wqp.username" value="wqp_core"/>
            <sysproperty key="app.datasource.wqp.password" value="${wqp_core_password}"/>
            <sysproperty key="app.datasource.nemi.url" value="${nemiUrl}"/>
            <sysproperty key="app.datasource.nemi.username" value="nemi_data"/>
            <sysproperty key="app.datasource.nemi.password" value="${nemi_data_password}"/>
        </java>
    </target>

    <target name="install">
        <echo>Install the New Data</echo>
        <exec executable="sqlplus" failonerror="true">
            <arg value="wqp_core/${wqp_core_password}@${instance}"/>
            <arg value="@${basedir}/install.sql"/>
        </exec>
    </target>

    <target name="finishETL" depends="setStopRun" unless="stopRun">
        <echo>Runs the finishing script at ${storet_host}</echo>
        <sshexec host="${storet_host}"
            trust="true"
            failonerror="true"
            username="storet_user"
            password="${storet_user_password}"
            command="bash -e -x ${work.dir}/wqx_finish.sh ${dbFolder}"
        />
    </target>

</project>